
services:
  api:
    build: .
    image: python_api
    container_name: python_api
    env_file: .env
    ports:
      - "8000:8000" 
    depends_on:
      db:
        condition: service_healthy # Garante que o DB esteja saudável
    volumes:
      - .:/app # Monta o diretório atual no container
    restart: unless-stopped # Reinicia o container a menos que seja parado manualmente

  db:
    image: mysql:8.0
    container_name: mysql_db
    env_file: .env
    ports:
      - "3306:3306"
    volumes:
      - db_data:/var/lib/mysql # Persistência de dados    
    command: 
      [ 
        "mysqld", # Comando para iniciar o MySQL
        "--default-authentication-plugin=mysql_native_password", # Compatibilidade de autenticação
        "--lower_case_table_names=1" # Sensibilidade a maiúsculas/minúsculas
      ]
    
    # Healthcheck para saber se o MySQL está pronto
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-u$$MYSQL_USER", "-p$$MYSQL_ROOT_PASSWORD"]
      interval: 5s
      timeout: 5s
      retries: 5

volumes:
    db_data:
